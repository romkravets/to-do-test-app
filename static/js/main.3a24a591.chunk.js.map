{"version":3,"sources":["components/main/Main.js","http-service/http-service.js","components/task-list/List.js","components/task-list/ListItem.js","components/task-list/TaskListCounter.js","components/task-list/TaskList.js","components/secret/Secret.js","components/main/NotFound.js","Auth.js","components/main/Callback.js","App.js","serviceWorker.js","index.js"],"names":["Main","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","class","className","props","name","href","auth","isAutenticated","onClick","login","React","HTTPService","url","successCallbak","errorCallback","xhr","XMLHttpRequest","open","send","onreadystatechange","readyState","status","parseData","JSON","parse","response","data","successCallback","setRequestHeader","stringify","parsedData","List","children","ListItem","_getPrototypeOf2","_this","_len","length","args","Array","_key","call","concat","deleteItem","onDeleteItem","id","onChange","task","assign","completed","type","checked","title","TaskListCounter","counter","URL","TaskList","onSubmit","e","preventDefault","console","log","state","newTaskTitle","httpService","post","setState","oldState","newState","tasks","push","valueChange","target","delete","resp","filter","item","updateItem","updateTask","put","updateIndex","reduce","index","i","fetchData","_this2","get","_this3","listItems","map","ListItem_ListItem","ItemCounter","TaskListCounter_TaskListCounter","List_List","placeholder","Secret","logout","TaskList_TaskList","NotFound","Auth","auth0","WebAuth","domain","clientID","redirectUri","audience","responseType","scope","authorize","hendleAuthentication","parseHash","error","authResults","accessToken","idToken","expiresAt","expiresIn","Date","getTime","localStorage","setItem","hash","location","pathname","getItem","removeItem","getProfile","jwtDecode","Callback","App","mainComponent","react_default","a","createElement","Main_Main","Callback_Callback","Secret_Secret","NotFound_NotFound","Component","Boolean","window","hostname","match","changes","ReactDOM","render","src_App_0","basename","process","document","getElementById","initialState","given_name","replace","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a24a591.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nexport class Main extends React.Component {\r\n   render() {\r\n      return (\r\n         <div class=\"page-login\">\r\n            <div className=\"login-container\">\r\n             <h2 className=\"login-container__caption\">Hello! {this.props.name}<br></br>We are glad to see you.</h2>\r\n               <div>\r\n                  <span>Your todo list </span>\r\n                  <a href=\"/secret\">here</a>\r\n               </div>\r\n            </div>\r\n            {!this.props.auth.isAutenticated() &&\r\n            <div className=\"btn-container\">\r\n               <p>Please login first</p>\r\n               <button className=\"btn\" onClick={this.props.auth.login}>Login</button>\r\n            </div>\r\n             }\r\n         </div>\r\n      )\r\n   }\r\n}\r\n\r\n","export class HTTPService {\r\n   get(url, successCallbak, errorCallback) {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('GET', url);\r\n      xhr.send();\r\n      xhr.onreadystatechange = function() {\r\n         if (xhr.readyState === 4) {\r\n            if(xhr.status === 200) {\r\n               const parseData = JSON.parse(xhr.response);\r\n               successCallbak(parseData);\r\n            } else {\r\n               errorCallback(xhr);\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   post(url, data, successCallback, errorCallback) {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('POST', url);\r\n      xhr.setRequestHeader('content-type', 'application/json');\r\n      xhr.send((typeof data !== 'string') ? JSON.stringify(data) : data);\r\n  \r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState === 4) {\r\n          if(xhr.status === 200) {\r\n            const parsedData = JSON.parse(xhr.response);\r\n            successCallback(parsedData);\r\n          } else {\r\n            errorCallback(xhr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    delete(url, successCallback, errorCallback) {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('DELETE', url);\r\n\r\n      xhr.send();\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState === 4) {\r\n          if(xhr.status === 200) {\r\n            const parsedData = JSON.parse(xhr.response);\r\n            successCallback(parsedData);\r\n          } else {\r\n            errorCallback(xhr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    put(url, data, successCallback, errorCallback) {\r\n      const xhr = new XMLHttpRequest();\r\n      xhr.open('PUT', url);\r\n      xhr.setRequestHeader('content-type', 'application/json');\r\n      xhr.send(JSON.stringify(data));\r\n\r\n      xhr.onreadystatechange = function() {\r\n        if (xhr.readyState === 4) {\r\n          if(xhr.status === 200) {\r\n            const parsedData = JSON.parse(xhr.response);\r\n            successCallback(parsedData);\r\n          } else {\r\n            errorCallback(xhr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n}","import * as React from 'react';\r\n\r\nexport class List extends React.Component {\r\n   render() {\r\n      return  <ul className=\"task-list__content\">\r\n      {this.props.children}\r\n   </ul>\r\n   }\r\n}","import * as React from 'react';\r\n\r\nimport './ListItem.scss';\r\n\r\nexport class ListItem extends React.Component {\r\n   deleteItem = () => {\r\n      this.props.onDeleteItem(this.props.id);\r\n   }\r\n\r\n   onChange = () => {\r\n      const task = Object.assign({}, this.props);\r\n      task.completed = !task.completed;\r\n      this.props.onChange(task);\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <li className=\"list-item\" id={this.props.id}>\r\n               <input className=\"list-item__native-input\"\r\n               type=\"checkbox\" id={'input'+this.props.id}\r\n               onChange={this.onChange}\r\n               checked={this.props.completed}/>\r\n            <span className=\"list-item__title\">\r\n               {this.props.title}\r\n            </span>\r\n            <button className=\"list-item__del\" onClick={this.deleteItem}>⮿</button>\r\n         </li>\r\n      )\r\n   }\r\n}","import * as React from 'react';\r\n\r\nexport class TaskListCounter extends React.Component {\r\n\r\n   render() {\r\n      return (\r\n         <div className=\"task-list__counter\">\r\n            <div className=\"task-list__top\">\r\n               <span>{this.props.counter} to do</span>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n}","import * as React from 'react';\r\n\r\nimport { HTTPService } from '../../http-service/http-service';\r\n\r\nimport { List } from './List';\r\nimport { ListItem } from './ListItem';\r\nimport { TaskListCounter } from './TaskListCounter';\r\n\r\nimport './TaskList.scss';\r\n\r\n\r\nconst URL = 'https://evening-dawn-11092.herokuapp.com/list';\r\n\r\nexport class TaskList extends React.Component {\r\n   constructor() {\r\n      super();\r\n      this.httpService = new HTTPService();\r\n      this.state = {\r\n         tasks: [],\r\n         newTaskTitle: ''\r\n      }\r\n   }\r\n\r\n   componentDidMount() {\r\n      this.fetchData();\r\n   }\r\n\r\n   fetchData() {\r\n      this.httpService.get(URL, (tasks) => {\r\n         this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.tasks = tasks;\r\n            console.log(newState);\r\n            return newState;\r\n         })\r\n      })\r\n   }\r\n\r\n   onSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(e);\r\n      const title = this.state.newTaskTitle;\r\n\r\n      this.httpService.post(URL, {title}, (task) => {\r\n         this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.newTaskTitle = '';\r\n            newState.tasks.push(task);\r\n            console.log(newState);\r\n            return newState;\r\n         })\r\n      })\r\n   }\r\n\r\n    valueChange = (e) => {\r\n      const value = e.target.value;\r\n      this.setState((oldState) => {\r\n        const newState = Object.assign({}, oldState);\r\n        newState.newTaskTitle = value;\r\n        return newState;\r\n      });\r\n    }\r\n\r\n   deleteItem = (id) => {\r\n      this.httpService.delete(`${URL}/${id}`, (resp) => {\r\n         this.setState((oldState) => {\r\n            const newState = Object.assign({}, oldState);\r\n            newState.tasks = newState.tasks.filter((item) => item.id !== id);\r\n            return newState;\r\n         })\r\n      })\r\n   }\r\n\r\n   updateItem =(updateTask) => {\r\n      this.httpService.put(`${URL}/${updateTask.id}`,updateTask,(resp) =>{\r\n         this.setState(oldState => {\r\n            const newState = Object.assign({}, oldState);\r\n            let updateIndex = oldState.tasks.reduce((index, item, i) => {\r\n               if(item.id === updateTask.id) {\r\n                  index = i;\r\n               }\r\n               return index;\r\n            }, 0);\r\n\r\n            newState.tasks[updateIndex] = resp;\r\n            return newState;\r\n         });\r\n      });\r\n   }\r\n\r\n   render() {\r\n      const listItems = this.state.tasks.map((task, i) => {\r\n         return <ListItem \r\n         key={i} \r\n         id={task.id} \r\n         title={task.title} \r\n         completed={task.completed}\r\n         onDeleteItem={this.deleteItem}\r\n         onChange={this.updateItem}\r\n         />\r\n      });\r\n\r\n      const ItemCounter = this.state.tasks.filter(task => !task.completed).length;\r\n      return (\r\n         <div className=\"task-list\">\r\n         <TaskListCounter counter={ItemCounter}/>\r\n         <div className=\"list\">\r\n            <List>{listItems}</List>\r\n         </div>\r\n         <form className=\"task-list__head\" onSubmit={this.onSubmit}>\r\n               <input\r\n               type=\"text\"\r\n               className=\"task-list__input\"\r\n               placeholder=\"New Todo\"\r\n               onChange={this.valueChange}\r\n               value={this.state.newTaskTitle}/>\r\n               <button className=\"task-list__btn\">Add</button>\r\n         </form>\r\n         </div>\r\n      )\r\n   }\r\n}","import * as React from 'react';\r\nimport {TaskList} from '../task-list/TaskList';\r\n\r\nexport class Secret extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"page-login\">\r\n            <header className=\"logout-container\">\r\n                  <p className=\"logout-container__usere\">Hello,{this.props.name}</p>\r\n                  <button className=\"btn logout-container__btn\" onClick={this.props.auth.logout}>Logout</button>\r\n            </header>\r\n            <TaskList/>\r\n         </div>\r\n      )\r\n   }\r\n}\r\n","import * as React from 'react';\r\n\r\nexport class NotFound extends React.Component {\r\n   render() {\r\n      return (\r\n         <div className=\"text-center-block\">Not found<br></br>Please login</div>\r\n      )\r\n   }\r\n}","import auth0 from 'auth0-js';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nconst LOGIN_SUCCESS_PAGE = \"/secret\";\r\nconst LOGIN_FAILURE_PAGE = \"/\";\r\n\r\nexport default class Auth {\r\n   auth0 = new auth0.WebAuth({\r\n      domain: 'divyanshu.auth0.com',\r\n      clientID: 'TJyKPI6aRiRwgr6SxlT7ExW10NEHW4Vy',\r\n      redirectUri: process.env.NODE_ENV === 'development' ? 'http://localhost:3000/callback' : 'https://appbaseio-apps.github.io/reactivesearch-auth0-example/callback',\r\n      audience: 'https://divyanshu.auth0.com/userinfo',\r\n      responseType: 'token id_token',\r\n      scope: 'openid profile'\r\n   });\r\n\r\n   login = () => {\r\n      this.auth0.authorize();\r\n   }\r\n\r\n   hendleAuthentication = () => {\r\n      this.auth0.parseHash((error, authResults) => {\r\n         if (authResults && authResults.accessToken && authResults.idToken) {\r\n            let expiresAt = JSON.stringify((authResults.expiresIn)* 1000 + new Date().getTime());\r\n            localStorage.setItem(\"access_token\", authResults.accessToken);\r\n            localStorage.setItem(\"id_token\", authResults.idToken);\r\n            localStorage.setItem(\"expires_at\", expiresAt);\r\n            localStorage.hash = \"\";\r\n            // eslint-disable-next-line no-restricted-globals\r\n            location.pathname = LOGIN_SUCCESS_PAGE;\r\n         } else if (error) {\r\n            // eslint-disable-next-line no-restricted-globals\r\n            location.pathname = LOGIN_FAILURE_PAGE;\r\n         }\r\n      })\r\n   }\r\n\r\n   isAutenticated = () => {\r\n      let expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\r\n      return new Date().getTime() < expiresAt;\r\n   }\r\n\r\n   logout = () => {\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"id_token\");\r\n      localStorage.removeItem(\"expires_at\");\r\n      // eslint-disable-next-line no-restricted-globals\r\n      location.pathname = LOGIN_FAILURE_PAGE;\r\n   }\r\n\r\n   getProfile = () => {\r\n      if (localStorage.getItem(\"id_token\")) {\r\n         return jwtDecode(localStorage.getItem(\"id_token\"));\r\n      }else {\r\n         return {};\r\n      }\r\n   }\r\n}","import * as React from 'react';\r\nimport Auth from '../../Auth';\r\n\r\nexport class Callback extends React.Component {\r\n   componentDidMount() {\r\n      const auth = new Auth();\r\n      auth.hendleAuthentication();\r\n   }\r\n   render() {\r\n      return (\r\n         <div className=\"text-center-block\">Loading...</div>\r\n      )\r\n   }\r\n}\r\n","import React from 'react';\nimport { Main } from './components/main/Main';\nimport { Secret } from './components/secret/Secret';\nimport './App.scss';\nimport { NotFound } from './components/main/NotFound';\nimport { Callback } from './components/main/Callback';\n\nclass App extends React.Component {\n  render() {\n    let mainComponent = \"\";\n  switch(this.props.location) {\n    case \"\":\n      mainComponent = <Main {...this.props}/>;\n      break;\n    case \"callback\":\n      mainComponent = <Callback/>;\n      break;\n    case \"secret\":\n      mainComponent = this.props.auth.isAutenticated() ? <Secret {...this.props}/> : <NotFound />;\n      break;\n    default:\n    mainComponent = <NotFound/>;\n  }\n    return (\n      <div className=\"App\">\n       {mainComponent}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Auth from './Auth';\nimport * as serviceWorker from './serviceWorker';\n\nconst auth = new Auth();\n\nlet state = {};\nwindow.setState = (changes) => {\n   state = Object.assign({}, state, changes);\n   ReactDOM.render(<App basename={process.env.PUBLIC_URL} {...state}/>, document.getElementById('root'));\n};\n\nlet username = auth.getProfile().given_name || \"Friend\";\n\nlet initialState = {\n   name: username,\n   // eslint-disable-next-line no-restricted-globals\n   location: location.pathname.replace(/^\\/?|\\/$/g, \"\"),\n   auth\n};\n\nwindow.setState(initialState);\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}